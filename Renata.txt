Teste Front-end Angular

Desenvolvimento 
Code review 
Testes 
Acessibilidade 
Metodos ágeis 
Ferramentas de Design 
Git / Gitflow 
Sass 
BEM 
Repositórios 
Inglês 
Como você aprende 
Objetivo de carreira

Questões:
Qual sua experiência com desenvolvimento?
Como é o processo de trabalho onde você trabalha atualmente?
Você tem experiência com desenvolvimento de testes unitários? Teste E2E?
Você já trabalhou com desenvolvimento de acessibilidade na Web? 
Como chega uma nova demanda para você?
Você tem experiência com desenvolvimento a partir de protótipos de design? Figma, Adobe XD, Sketch 
Você atualmente trabalha seguindo alguma metodologia ágil?
Você tem uma boa experiência com Git e Gitflow? Sabe a diferença entre um rebase e um merge?
Você tem experiência com metodologia BEM?
Você tem um bom conhecimento em Sass? Mixins, Funções, Variáveis?
Quais ferramentas de repositório você tem experiência? Github, Bitbucket, Gitlab
Quais ferramentas de CI/CD você já trabalhou? Github Actions, Jenkins, Circle CI, Azure Devops 
Você tem experiência com Docker? 
Por onde você costuma estudar e aprender
Qual seu nível de conhecimento em inglês
Qual seu objetivo de carreira? Seguir para uma área técnica ou de gestão?



Desenvolvimento 
Code review 
Testes 
Acessibilidade 
Metodos ágeis 
Ferramentas de Design 
Git / Gitflow 
Sass 
BEM 
Repositórios 
Inglês 
Como você aprende


Fontes

Conhecimento sobre @fonte-face e fontes customizadas
Conhecimento sobre utilização de fontes do Google Fonts
Aplicação das fontes específicas para títulos e demais textos
 

Centralização:

Conhecimento em organização de elementos
Avaliar possível conhecimento em Flexbox, CSS Grid ou até mesmo margin
 

Replicação e Posicionamento:

Conhecimento em mudança de forma (border-radius)
Utilização de variáveis do Sass
Posicionamento absoluto


Rotas Angular:
Conhecimento em rotas no Angular
Sintaxe do lazy loading
Utilização do router-outlet
 

Componente:

Criação de componente
Projeção com ng-content
Conhecimento HTML semântico de tabela (thead, tbody)
 

Serviço:

Criação de serviço
Utilização do HttpClient
Responsabilidade do serviço
Observables

Integração:

Injeção do serviço como dependência
Hook do componente para a requisição do serviço
Criação de interface
Utilização do componente criado
Concatenação dos dados de Endereço da API
